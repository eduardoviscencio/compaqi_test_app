name: Flutter CI

on:
  push:
    branches: [main]

jobs:
  analyze:
    name: Flutter Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: stable

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Notify skipping build
        if: ${{ !contains(github.event.head_commit.message, '--build') }}
        run: |
          echo "Skipping build: commit message does not include '--build'."

  build-android:
    name: Build Android AAB
    needs: analyze
    if: contains(github.event.head_commit.message, '--build')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "oracle"
          cache: gradle

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: stable

      - name: Clone secrets repository
        run: |
          git clone https://eduardoviscencio:${{ secrets.CI_PAT }}@github.com/eduardoviscencio/compaqi-secrets.git

      - name: Copy secrets
        run: cp compaqi-secrets/env.json .

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build appBundle
        run: flutter build appbundle --dart-define-from-file=env.json

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Upload Android artifact
        uses: actions/upload-artifact@v2
        with:
          name: android-aab-${{ steps.extract_version.outputs.version }}
          path: build/app/outputs/bundle/release/app-release.aab

  build-ios:
    name: Build iOS IPA
    needs: analyze
    if: contains(github.event.head_commit.message, '--build')
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: stable

      - name: Clone secrets repository
        run: |
          git clone https://eduardoviscencio:${{ secrets.CI_PAT }}@github.com/eduardoviscencio/compaqi-secrets.git

      - name: Copy secrets
        run: cp compaqi-secrets/env.json .

      - name: Install dependencies
        run: flutter pub get

      - name: Build IPA (no codesign)
        run: flutter build ipa --no-codesign --dart-define-from-file=env.json

      - name: Compress iOS build
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v2
        with:
          name: ios-ipa-${{ steps.extract_version.outputs.version }}
          path: build/ios_build.tar.gz
